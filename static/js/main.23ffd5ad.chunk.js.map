{"version":3,"sources":["components/Editor.jsx","components/MyAppBar.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","Editor","mode","setValue","value","placeHolder","classes","className","editor","width","height","placeholder","name","onChange","fontSize","showPrintMargin","showGutter","highlightActiveLine","title","flexGrow","MyAppBar","autoUpdate","handleAutoUpdate","onRunHandler","AppBar","position","Toolbar","Typography","variant","FormControlLabel","control","Switch","checked","label","Button","color","disabled","onClick","endIcon","iframe","minHeight","background","accordion","App","useState","html","setHtml","css","setCss","javascript","setJavascript","setAutoUpdate","updatedSource","setUpdatedSource","source","length","container","state","Grid","item","xs","sm","md","Accordion","defaultExpanded","AccordionSummary","expandIcon","AccordionDetails","srcDoc","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23ffd5ad.chunk.js","sourcesContent":["import React from \"react\";\nimport AceEditor from \"react-ace\";\nimport { makeStyles } from \"@material-ui/core\";\nimport \"ace-builds/src-noconflict/mode-html\";\nimport \"ace-builds/src-noconflict/mode-css\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst Editor = ({ mode, setValue, value, placeHolder }) => {\n  const classes = useStyles();\n  return (\n    <AceEditor\n      className={classes.editor}\n      width=\"100%\"\n      height=\"60vh\"\n      placeholder={placeHolder}\n      mode={mode}\n      theme=\"monokai\"\n      name=\"blah2\"\n      onChange={setValue}\n      fontSize={16}\n      showPrintMargin={true}\n      showGutter={true}\n      highlightActiveLine={true}\n      value={value}\n    />\n  );\n};\n\nexport default Editor;\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  Typography,\n  FormControlLabel,\n  Switch,\n  makeStyles,\n} from \"@material-ui/core\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst MyAppBar = ({ autoUpdate, handleAutoUpdate, onRunHandler }) => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h4\" className={classes.title}>\n          Editor\n        </Typography>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={autoUpdate}\n              onChange={handleAutoUpdate}\n              name=\"autoUpdate\"\n            />\n          }\n          label=\"Auto-Update\"\n        />\n        <Button\n          variant=\"contained\"\n          className=\"classes.runBtn\"\n          color=\"secondary\"\n          disabled={autoUpdate}\n          onClick={onRunHandler}\n          endIcon={<PlayCircleFilledIcon />}\n        >\n          Run\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default MyAppBar;\n","import React, { useState } from \"react\";\nimport Editor from \"./components/Editor\";\nimport {\n  Typography,\n  Grid,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  makeStyles,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MyAppBar from \"./components/MyAppBar\";\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  iframe: {\n    width: \"100%\",\n    minHeight: \"100vh\",\n    height: \"100%\",\n    background: \"#fff\",\n  },\n  accordion: {\n    background: \"#1A1B1F\",\n    color: \"#fff\",\n  },\n}));\n\nconst App = () => {\n  const [html, setHtml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n  const [javascript, setJavascript] = useState(\"\");\n\n  const [autoUpdate, setAutoUpdate] = useState(false);\n\n  const [updatedSource, setUpdatedSource] = useState(\"\");\n  const classes = useStyles();\n  const source = `\n    <html>\n        <head>\n            <style>\n                ${css}\n            </style>\n        </head>\n        <body>\n            ${html}\n            <script>\n                ${javascript}\n            </script>\n        </body>\n    </html>\n  `;\n\n  const onRunHandler = () => {\n    if (html.length === 0 && css.length === 0 && javascript.length === 0) {\n      return;\n    }\n    setUpdatedSource(source);\n  };\n\n  const handleAutoUpdate = () => {\n    setAutoUpdate((state) => !state);\n    onRunHandler();\n  };\n\n  return (\n    <div className={classes.container}>\n      <MyAppBar\n        autoUpdate={autoUpdate}\n        handleAutoUpdate={handleAutoUpdate}\n        onRunHandler={onRunHandler}\n      />\n      <Grid container>\n        <Grid item xs={12} sm={12} md={6}>\n          <Accordion className={classes.accordion} defaultExpanded={true}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon color=\"secondary\" />}>\n              <Typography variant=\"h5\">HTML</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Editor\n                mode=\"html\"\n                setValue={setHtml}\n                value={html}\n                placeHolder=\"Add html\"\n              />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion className={classes.accordion}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon color=\"secondary\" />}>\n              <Typography variant=\"h5\">Css</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Editor\n                mode=\"css\"\n                setValue={setCss}\n                value={css}\n                placeHolder=\"Add Css\"\n              />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion className={classes.accordion}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon color=\"secondary\" />}>\n              <Typography variant=\"h5\">Javascript</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Editor\n                mode=\"javascript\"\n                setValue={setJavascript}\n                value={javascript}\n                placeHolder=\"Add Javascript\"\n              />\n            </AccordionDetails>\n          </Accordion>\n        </Grid>\n        <Grid item xs={12} sm={12} md={6}>\n          <iframe\n            title=\"output\"\n            srcDoc={autoUpdate ? source : updatedSource}\n            className={classes.iframe}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}